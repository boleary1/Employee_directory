{"version":3,"sources":["components/List.js","components/Header.js","App.js","index.js"],"names":["SearchBar","Search","columns","dataField","text","formatter","cell","row","src","image","align","sort","birthdate","substring","employeeArray","defaultSorted","order","List","props","employees","map","item","push","picture","medium","name","first","last","phone","email","dob","date","searchProps","keyField","data","striped","Header","className","App","ReactDOM","render","document","getElementById"],"mappings":"+wnNAMQA,G,kBAAcC,OAAdD,WAIR,IAAME,EAAU,CACd,CACEC,UAAW,QACXC,KAAM,QACNC,UAPJ,SAAqBC,EAAMC,GACzB,OAAQ,qBAAKC,IAAMD,EAAIE,SAOrBC,MAAO,UAET,CACEP,UAAW,OACXC,KAAM,OACNO,MAAM,GAER,CACER,UAAW,QACXC,KAAM,gBACL,CACDD,UAAW,QACXC,KAAM,eACNO,MAAM,GAER,CACER,UAAW,YACXC,KAAM,MACNC,UAGJ,SAAoBO,GAClB,OAAOA,EAAUC,UAAU,EAAG,GAAK,IAAMD,EAAUC,UAAU,EAAG,IAAM,IAAMD,EAAUC,UAAU,EAAG,MAF/FC,EAAgB,GAOtB,IAAMC,EAAgB,CAAC,CACrBZ,UAAW,QACXa,MAAO,QA4BMC,MAzBf,SAAcC,GAYZ,OAVEA,EAAMC,UAAUC,KAAI,SAAAC,GAAI,OAAIP,EAAcQ,KACxC,CACEb,MAAOY,EAAKE,QAAQC,OACpBC,KAAMJ,EAAKI,KAAKC,MAAQ,IAAML,EAAKI,KAAKE,KACxCC,MAAOP,EAAKO,MACZC,MAAOR,EAAKQ,MACZjB,UAAWS,EAAKS,IAAIC,UAMxB,gCACA,cAAC/B,EAAD,eAAgBkB,EAAMc,cACtB,cAAC,IAAD,CACEC,SAAS,QACTC,KAAMpB,EACNZ,QAASA,EACTa,cAAgBA,EAChBoB,SAAO,Q,cCzDEC,MARf,WACE,OACE,wBAAQC,UAAU,SAAlB,SACE,kDCAAvB,EAAgBK,EAYPmB,MAVf,WACE,OAEA,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAMnB,UAAWL,IAFnB,Q,MCNFyB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4e89ce0a.chunk.js","sourcesContent":["import React from \"react\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport Moment from 'react-moment';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\n\nconst { SearchBar } = Search;\nfunction imageFormat(cell, row) {\n  return (<img src= {row.image}></img>)\n  };\nconst columns = [\n  {\n    dataField: 'image',\n    text: 'Image',\n    formatter: imageFormat,\n    align: 'center',\n  },\n  {\n    dataField: 'name',\n    text: 'Name',\n    sort: true,\n  },\n  {\n    dataField: 'phone',\n    text: 'Phone Number'\n  }, {\n    dataField: 'email',\n    text: 'Email adress',\n    sort: true,\n  },\n  {\n    dataField: 'birthdate',\n    text: 'DOB',\n    formatter: dateFormat\n  },];\nconst employeeArray = [];\nfunction dateFormat(birthdate) {\n  return birthdate.substring(5, 7) + \"/\" + birthdate.substring(8, 10) + \"/\" + birthdate.substring(0, 4); \n  };\n\n\n\nconst defaultSorted = [{\n  dataField: 'email', // if dataField is not match to any column you defined, it will be ignored.\n  order: 'asc' // desc or asc\n}];\n// Whenever we try to render an array containing JSX, React knows to render each JSX element separately\nfunction List(props) {\n  {\n    props.employees.map(item => employeeArray.push(\n      {\n        image: item.picture.medium,\n        name: item.name.first + \" \" + item.name.last,\n        phone: item.phone,\n        email: item.email,\n        birthdate: item.dob.date\n            },\n    ))\n  }\n  return (\n    \n    <div>\n    <SearchBar { ...props.searchProps } />\n    <BootstrapTable\n      keyField='email'\n      data={employeeArray}\n      columns={columns}\n      defaultSorted={ defaultSorted } \n      striped />\n      </div>\n  );\n}\nexport default List;","import React from \"react\";\nimport \"../styles/Header.css\";\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <h1>Employee List</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport List from \"./components/List\";\nimport employees from \"./employees.json\";\nimport Header from \"./components/Header\";\n\n\nconst employeeArray = employees;\n\nfunction App() {\n  return(\n\n  <div>\n    <Header />\n    <List employees={employeeArray} />;\n    </div>\n  );\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}